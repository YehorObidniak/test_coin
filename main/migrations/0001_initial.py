# Generated by Django 5.0.4 on 2024-04-29 13:51

import django.core.validators
import django.db.models.deletion
import main.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True)),
                ('coin_limit', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('logo', models.CharField(max_length=1023, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('channel_link', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('telegram_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('multitap_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(16)])),
                ('recharging_speed_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(16)])),
                ('energy_limit_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(16)])),
                ('rocket_count', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('full_energy_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('energy_balance', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(0)])),
                ('coins_balance', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_coins_earned', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_seen', models.BigIntegerField(default=main.models.CURRENT_TIME)),
                ('total_earned_day', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_earned_week', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('friends', models.ManyToManyField(blank=True, to='main.player')),
                ('league', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.league')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='main.player')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='main.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('AV', 'Available'), ('CM', 'Completed'), ('PE', 'Pending'), ('RE', 'Rejected')], default='AV', max_length=9)),
                ('completion_date', models.DateTimeField(auto_now_add=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.player')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('coins_reward', models.IntegerField(default=10000)),
                ('logo', models.CharField(default='', max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('penalty', models.CharField(blank=True, max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('players', models.ManyToManyField(related_name='tasks', through='main.PlayerTask', to='main.player')),
            ],
        ),
        migrations.AddField(
            model_name='playertask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.task'),
        ),
        migrations.AlterUniqueTogether(
            name='playertask',
            unique_together={('player', 'task')},
        ),
    ]
